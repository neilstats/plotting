---
title: "Removing parts of a plot created with shape_plot() or forest_plot()"
date: "2022-11-14"
author: "Neil Wright"
format:
  html:
    toc: true
---

```{r}
#| include: false
library(ckbplotr)
resultsA <- dplyr::filter(ckbplotr_forest_data, name == "A")
resultsB <- dplyr::filter(ckbplotr_forest_data, name == "B")
```

There are various ways to remove parts of plots (or make them not appear) created with `shape_plot()` and `forest_plot()`. Which will work best may depend on how you are using the code, some examples are:

### Remove text by setting a position to NA
```{r}
#| warning: false
shape_plot(ckbplotr_shape_data[ckbplotr_shape_data$is_female == 0,],
           col.x        = "rf",
           col.estimate = "est",
           col.stderr   = "se",
           xlims        = c(15, 50),
           ylims        = c(0.5, 3),
           addarg       = list(estimates = "x = NA"))
```


### Remove points by setting their colour to NA
```{r}
#| warning: false
forest_plot(panels   = list(resultsA, resultsB),
            col.key  = "variable",
            colour   = NA,
            cicolour = "black")
```

### Remove points by setting their size to zero
```{r}
#| warning: false
forest_plot(panels    = list(resultsA, resultsB),
            col.key   = "variable",
            pointsize = 0)
```

### Remove confidence interval lines by setting their colour to NA
```{r}
#| warning: false
forest_plot(panels   = list(resultsA, resultsB),
            col.key  = "variable",
            colour   = "black",
            cicolour = NA)
```

### Remove points by removing that layer of the ggplot object
```{r}
#| warning: false
forest <- forest_plot(panels    = list(resultsA, resultsB),
                      col.key   = "variable",
                      printplot = FALSE)

## first check which layer in forest$plot
## is the geom_point() for points, then remove
forest$plot$layers[[2]] <- NULL
forest$plot
```
